version:  '3.7'

services:
  postgres:
    image: 'postgres:latest'
    restart: always
    environment:
      POSTGRES_USER: '${PG_USER}'
      POSTGRES_PASSWORD: '${PG_PASSWORD}'
      POSTGRES_DB: '${PG_DB}'
    ports:
      - '${PG_PORT}:5432'

  redis:
    image: 'redis:alpine'

  minio:
    image: minio/minio:latest
    ports:
      - '${S3_PORT}:9000'
    environment:
      MINIO_ACCESS_KEY: '${S3_KEY}'
      MINIO_SECRET_KEY: '${S3_SECRET}'
    command: server /data
    restart: unless-stopped

  symfony:
    image: 'php:8.3-fpm-alpine'
    restart: always
    working_dir: '/app'
    volumes:
      - './symfony:/app'
    ports:
      - '${SYM_PORT}:8000'
    command: ['php', '-S', '0.0.0.0:8000', '-t', 'public/']
    depends_on:
      - 'postgres'
      - 'redis'

  graphql:
    image: 'hasura/graphql-engine:latest'
    ports:
    - '${GRAPHQL_PORT}:8080'
    depends_on:
    - 'postgres'
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: 'postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:5432/${PG_DB}'
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ADMIN_SECRET: '${GRAPHQL_ADMIN_SECRET}'

  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '${KAFKA_PORT}:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

